/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Admin.Utity;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Admin.Controller.CustomScrollBar;
import Singleton.MyConnection;
import DAO.DAOPhieuMuon;

import Object.BanDoc;
import Object.PhieuMuon;
import Object.Sach;

import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.Timestamp;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import java.io.OutputStreamWriter;
import java.nio.charset.StandardCharsets;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.swing.*;
import java.awt.*;
//pdf
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;

import com.lowagie.text.FontFactory;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import com.lowagie.text.PageSize;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.Document;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Font;
import com.lowagie.text.pdf.BaseFont;


public class QuanLyPhieuMuonPanel extends javax.swing.JPanel {

    private Connection conn;
    public QuanLyPhieuMuonPanel() {
     initComponents();
//    tbnSach.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
    tbnSach.setRowHeight(25); 
    // Custom scrollbar
    jScrollPane1.getVerticalScrollBar().setUI(new CustomScrollBar());
    jScrollPane1.getHorizontalScrollBar().setUI(new CustomScrollBar());
 
    // Set m√£ phi·∫øu m∆∞·ª£n
    txtMaPhieuMuon.setText(generateNewMaPhieuMuon());
    // üü¢ B∆Ø·ªöC 1: Load d·ªØ li·ªáu tr∆∞·ªõc
    loadDataToTable();
    // üü¢ B∆Ø·ªöC 2: Sau khi c√≥ d·ªØ li·ªáu, th√™m n√∫t "X√≥a"
    addDeleteButtonToTable(tbnSach);
    // üü¢ B∆Ø·ªöC 3: G√°n comboBox cho c·ªôt "Th·ªùi gian m∆∞·ª£n"
    String[] thoiGianMuon = {"3 th√°ng", "6 th√°ng", "12 th√°ng"};
    JComboBox<String> comboBox = new JComboBox<>(thoiGianMuon);
    // L·∫•y l·∫°i s·ªë c·ªôt sau khi ƒë√£ th√™m c·ªôt "X√≥a"
    int thoiGianMuonIndex = 6;

    if (tbnSach.getColumnCount() > thoiGianMuonIndex) {
        TableColumn thoiGianMuonColumn = tbnSach.getColumnModel().getColumn(thoiGianMuonIndex);
        thoiGianMuonColumn.setCellEditor(new DefaultCellEditor(comboBox));
    } else {
        System.err.println("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y c·ªôt 'Th·ªùi gian m∆∞·ª£n'");
    }    


    }
   private void addDeleteButtonToTable(JTable table) {
    DefaultTableModel model = (DefaultTableModel) table.getModel();
    if (table.getColumnCount() == model.getColumnCount()) {
        model.addColumn("X√≥a");
    }

    // Renderer hi·ªÉn th·ªã n√∫t m√†u ƒë·ªè
    table.getColumn("X√≥a").setCellRenderer(new TableCellRenderer() {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                                                        boolean hasFocus, int row, int column) {
            JButton button = new JButton("X√≥a");
            button.setForeground(Color.WHITE);
            button.setBackground(Color.RED);
            return button;
        }
    });

    // Editor x·ª≠ l√Ω click v·ªõi n√∫t m√†u ƒë·ªè
    table.getColumn("X√≥a").setCellEditor(new DefaultCellEditor(new JCheckBox()) {
        JButton button = new JButton("X√≥a");
        {
            button.setForeground(Color.WHITE);
            button.setBackground(Color.RED);
            button.addActionListener(e -> {
                int row = table.getEditingRow();
                if (row != -1) {
                    ((DefaultTableModel) table.getModel()).removeRow(row);
                }
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value,
                                                     boolean isSelected, int row, int column) {
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            return "X√≥a";
        }
    });
}


public String generateNewMaPhieuMuon() {
    String sql = "SELECT MAX(maphieumuon) AS maxMa FROM PhieuMuon";
    String newMaPhieuMuon = "PM001"; // M·∫∑c ƒë·ªãnh n·∫øu ch∆∞a c√≥ d·ªØ li·ªáu

    try (Connection conn = MyConnection.getConnection();
         PreparedStatement ps = conn.prepareStatement(sql);
         ResultSet rs = ps.executeQuery()) {

        if (rs.next()) {
            String lastMa = rs.getString("maxMa");

            if (lastMa != null && !lastMa.trim().isEmpty() && lastMa.length() > 2) {
                try {
                    int number = Integer.parseInt(lastMa.substring(2)) + 1;
                    newMaPhieuMuon = String.format("PM%03d", number);
                } catch (NumberFormatException e) {
                    System.err.println("L·ªói khi chuy·ªÉn ƒë·ªïi m√£ phi·∫øu m∆∞·ª£n: " + lastMa);
                    e.printStackTrace();
                }
            }
        }

        // TƒÉng d·∫ßn cho ƒë·∫øn khi t√¨m ƒë∆∞·ª£c m√£ kh√¥ng tr√πng
        while (isMaPhieuMuonExists(newMaPhieuMuon, conn)) {
            int number = Integer.parseInt(newMaPhieuMuon.substring(2)) + 1;
            newMaPhieuMuon = String.format("PM%03d", number);
        }

    } catch (SQLException e) {
        e.printStackTrace();
    }

    return newMaPhieuMuon;
}


public void resetForm() {
   
    txtTimKiemMaSinhVien.setText("");
    txtMaSinhVien.setText("");
    txtLop.setText("");
    txtKhoa.setText("");
    txtGioiTinh.setText("");
    txtSDT.setText("");
    ((DefaultTableModel) tbnSach.getModel()).setRowCount(0);
}


// Ki·ªÉm tra m√£ phi·∫øu m∆∞·ª£n c√≥ t·ªìn t·∫°i trong c∆° s·ªü d·ªØ li·ªáu hay kh√¥ng
private boolean isMaPhieuMuonExists(String maPhieuMuon, Connection conn) throws SQLException {
    String sqlCheck = "SELECT COUNT(*) FROM PhieuMuon WHERE maphieumuon = ?";
    try (PreparedStatement psCheck = conn.prepareStatement(sqlCheck)) {
        psCheck.setString(1, maPhieuMuon);
        try (ResultSet rsCheck = psCheck.executeQuery()) {
            if (rsCheck.next()) {
                return rsCheck.getInt(1) > 0;
            }
        }
    }
    return false;
}
   private void searchStudentInfo() {
    String maSinhVien = txtTimKiemMaSinhVien.getText().trim();

    if (maSinhVien.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p m√£ sinh vi√™n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String sql = "SELECT masinhvien, tensinhvien, lop, khoa, gioitinh, sodienthoai FROM BanDoc WHERE masinhvien = ?";

    try (Connection conn = MyConnection.getConnection();  // S·ª≠ d·ª•ng l·ªõp t·ª± ƒë·ªãnh nghƒ©a
         PreparedStatement ps = conn.prepareStatement(sql)) {

        ps.setString(1, maSinhVien);

        try (ResultSet rs = ps.executeQuery()) {
            if (rs.next()) {
                txtMaSinhVien.setText(rs.getString("masinhvien"));
                txtTenSinhVien.setText(rs.getString("tensinhvien"));
                txtLop.setText(rs.getString("lop"));
                txtKhoa.setText(rs.getString("khoa"));
                txtGioiTinh.setText(rs.getString("gioitinh"));
                txtSDT.setText(rs.getString("sodienthoai"));
            } else {
                JOptionPane.showMessageDialog(this, "Kh√¥ng t√¨m th·∫•y sinh vi√™n!", "Th√¥ng b√°o", JOptionPane.WARNING_MESSAGE);
            }
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "L·ªói khi t√¨m sinh vi√™n: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
    }
}

     private void loadDataToTable() {
  
}
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbnSach = new javax.swing.JTable();
        txtMaPhieuMuon = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTimKiemMaSach = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTimKiemMaSinhVien = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaSinhVien = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        txtKhoa = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txtTenSinhVien = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtSDT = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        txtGioiTinh = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        txtLop = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnXuatPDF = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnXuatPDF1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        tbnSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "M√£ s√°ch", "T√™n s√°ch", "T√°c gi·∫£", "Th·ªÉ lo·∫°i", "Nh√† xu·∫•t b·∫£n", "Gi√° ti·ªÅn", "Th·ªùi gian m∆∞·ª£n"
            }
        ));
        jScrollPane1.setViewportView(tbnSach);

        txtMaPhieuMuon.setBorder(null);
        txtMaPhieuMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaPhieuMuonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("M√£ s√°ch :");

        txtTimKiemMaSach.setBorder(null);
        txtTimKiemMaSach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemMaSachActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("M√£ phi·∫øu m∆∞·ª£n:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("M√£ sinh vi√™n:");

        txtTimKiemMaSinhVien.setBorder(null);
        txtTimKiemMaSinhVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemMaSinhVienActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("M√£ sinh vi√™n:");

        txtMaSinhVien.setBorder(null);
        txtMaSinhVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSinhVienActionPerformed(evt);
            }
        });

        jLabel7.setText("Khoa :");

        txtKhoa.setBorder(null);
        txtKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhoaActionPerformed(evt);
            }
        });

        jLabel2.setText("H·ªç t√™n :");

        txtTenSinhVien.setBorder(null);

        jLabel3.setText("L·ªõp :");

        txtSDT.setBorder(null);
        txtSDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSDTActionPerformed(evt);
            }
        });

        jLabel5.setText("Gi·ªõi t√≠nh :");

        txtGioiTinh.setBorder(null);

        jLabel6.setText("S·ªë ƒëi·ªán tho·∫°i :");

        txtLop.setBorder(null);
        txtLop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLop, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnXuatPDF.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXuatPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/excel_48.png"))); // NOI18N
        btnXuatPDF.setText("Xu·∫•t Excel");
        btnXuatPDF.setBorder(null);
        btnXuatPDF.setContentAreaFilled(false);
        btnXuatPDF.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXuatPDF.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXuatPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatPDFActionPerformed(evt);
            }
        });

        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add_48.png"))); // NOI18N
        btnThem.setText("Add");
        btnThem.setBorder(null);
        btnThem.setContentAreaFilled(false);
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnThem.setDefaultCapable(false);
        btnThem.setHideActionText(true);
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reset_48px.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(null);
        btnReset.setContentAreaFilled(false);
        btnReset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnXuatPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(btnXuatPDF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReset))
        );

        btnXuatPDF1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXuatPDF1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pdf_48.png"))); // NOI18N
        btnXuatPDF1.setText("Xu·∫•t PDF");
        btnXuatPDF1.setBorder(null);
        btnXuatPDF1.setContentAreaFilled(false);
        btnXuatPDF1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXuatPDF1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXuatPDF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatPDF1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTimKiemMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 998, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(46, 46, 46)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTimKiemMaSinhVien, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(jSeparator2)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSeparator1)
                                    .addComponent(txtMaPhieuMuon, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(273, 273, 273)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnXuatPDF1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(413, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMaPhieuMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel10))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTimKiemMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(86, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTimKiemMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(51, 51, 51))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnXuatPDF1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaPhieuMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaPhieuMuonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaPhieuMuonActionPerformed
    public void pdf(){
        JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Ch·ªçn n∆°i l∆∞u file PDF");
fileChooser.setSelectedFile(new File("PhieuMuon.pdf"));

int userSelection = fileChooser.showSaveDialog(null);
if (userSelection != JFileChooser.APPROVE_OPTION) {
    return;
}

File fileToSave = fileChooser.getSelectedFile();

// N·∫øu file ƒë√£ t·ªìn t·∫°i h·ªèi c√≥ ghi ƒë√® kh√¥ng
if (fileToSave.exists()) {
    int option = JOptionPane.showConfirmDialog(null,
            "File ƒë√£ t·ªìn t·∫°i. B·∫°n c√≥ mu·ªën ghi ƒë√®?", "X√°c nh·∫≠n",
            JOptionPane.YES_NO_OPTION);
    if (option == JOptionPane.NO_OPTION) {
        return;
    }
}

Connection conn = null;
try {
    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
    conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=Test;encrypt=true;trustServerCertificate=true",
            "sa", "123456789");

    String sql = "SELECT pm.maphieumuon, sv.masinhvien, sv.tensinhvien, " +
                 "       value as masach, s.tensach, pm.thoigianmuonsach, pm.thoigiantrasach " +
                 "FROM PhieuMuon pm " +
                 "JOIN SinhVien sv ON pm.masinhvien = sv.masinhvien " +
                 "CROSS APPLY STRING_SPLIT(pm.masach, ',') " +
                 "JOIN Sach s ON s.masach = value " +
                 "WHERE pm.datra = 0 " +
                 "AND pm.maphieumuon = ( " +
                 "    SELECT TOP 1 maphieumuon FROM PhieuMuon WHERE datra = 0 ORDER BY thoigianmuonsach DESC " +
                 ") " +
                 "ORDER BY pm.maphieumuon";

    PreparedStatement ps = conn.prepareStatement(sql);
    ResultSet rs = ps.executeQuery();

    if (!rs.isBeforeFirst()) {  // ki·ªÉm tra n·∫øu result set r·ªóng
        JOptionPane.showMessageDialog(null, "Kh√¥ng c√≥ phi·∫øu m∆∞·ª£n n√†o ch∆∞a tr·∫£!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // T·∫°o document PDF
    Document document = new Document(PageSize.A4);
    PdfWriter.getInstance(document, new FileOutputStream(fileToSave));
    document.open();

    // ƒê∆∞·ªùng d·∫´n t·ªõi font Arial, b·∫°n c·∫ßn s·ª≠a ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng v·ªõi m√°y c·ªßa b·∫°n
    String fontPath = "C:\\Windows\\Fonts\\arial.ttf";  // v√≠ d·ª• Windows
    BaseFont baseFont = BaseFont.createFont(fontPath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
    Font fontBold = new Font(baseFont, 14, Font.BOLD);
    Font fontNormal = new Font(baseFont, 12, Font.NORMAL);

    rs.next(); // di chuy·ªÉn t·ªõi b·∫£n ghi ƒë·∫ßu ti√™n

    String maPhieuMuon = rs.getString("maphieumuon");
    String maSinhVien = rs.getString("masinhvien");
    String tenSinhVien = rs.getString("tensinhvien");

    document.add(new Paragraph("M√£ phi·∫øu m∆∞·ª£n:\t\t" + maPhieuMuon, fontBold));
    document.add(new Paragraph("M√£ sinh vi√™n:\t\t" + maSinhVien, fontBold));
    document.add(new Paragraph("T√™n sinh vi√™n:\t\t" + tenSinhVien, fontBold));
    document.add(new Paragraph(" ")); // d√≤ng tr·ªëng

    PdfPTable table = new PdfPTable(4);
    table.setWidthPercentage(100);
    table.setWidths(new float[]{2f, 5f, 4f, 4f});

    String[] headers = {"M√£ s√°ch", "T√™n s√°ch", "Th·ªùi gian m∆∞·ª£n", "Th·ªùi gian tr·∫£"};
    for (String header : headers) {
        PdfPCell cell = new PdfPCell(new Paragraph(header, fontBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell.setBackgroundColor(new Color(230, 230, 230));
        table.addCell(cell);
    }

    // D√≤ng ƒë·∫ßu ti√™n ƒë√£ g·ªçi rs.next() r·ªìi n√™n l·∫•y d·ªØ li·ªáu lu√¥n
    do {
        table.addCell(new PdfPCell(new Paragraph(rs.getString("masach"), fontNormal)));
        table.addCell(new PdfPCell(new Paragraph(rs.getString("tensach"), fontNormal)));
        table.addCell(new PdfPCell(new Paragraph(rs.getString("thoigianmuonsach"), fontNormal)));
        table.addCell(new PdfPCell(new Paragraph(rs.getString("thoigiantrasach"), fontNormal)));
    } while (rs.next());

    document.add(table);
    document.add(new Paragraph(" "));
document.add(new Paragraph(" "));
document.add(new Paragraph("N·ªôi quy m∆∞·ª£n v√† s·ª≠ d·ª•ng s√°ch th∆∞ vi·ªán", fontBold));
document.add(new Paragraph("1. L√†m h·ªèng ho·∫∑c b·∫©n s√°ch (r√°ch, ·ªë m√†u, ghi ch√∫, v·∫Ω b·∫≠y...) s·∫Ω ph·∫£i ƒë·ªÅn b√π 25% gi√° tr·ªã cu·ªën s√°ch.", fontNormal));
document.add(new Paragraph("2. N·∫øu s√°ch v·ª´a b·∫©n v·ª´a r√°ch, b·∫°n ƒë·ªçc ph·∫£i b·ªìi th∆∞·ªùng 50% gi√° tr·ªã s√°ch.", fontNormal));
document.add(new Paragraph("3. L√†m m·∫•t s√°ch, b·∫°n ƒë·ªçc s·∫Ω ph·∫£i b·ªìi th∆∞·ªùng 100% gi√° tr·ªã s√°ch.", fontNormal));
document.add(new Paragraph("4. Tr·∫£ s√°ch tr·ªÖ h·∫°n s·∫Ω b·ªã ph·∫°t h√†nh ch√≠nh 50.000 VNƒê/l·∫ßn.", fontNormal));

    document.close();

    JOptionPane.showMessageDialog(null, "Xu·∫•t file PDF th√†nh c√¥ng!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);

    if (Desktop.isDesktopSupported()) {
        Desktop.getDesktop().open(fileToSave);
    }

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "L·ªói khi xu·∫•t file PDF: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
} finally {
    try {
        if (conn != null) conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
     // Ki·ªÉm tra v√† l·∫•y th√¥ng tin phi·∫øu m∆∞·ª£n
    PhieuMuon phieumuon = new PhieuMuon();
    phieumuon.setMaPhieuMuon(txtMaPhieuMuon.getText());
    // Ki·ªÉm tra v√† l·∫•y th√¥ng tin b·∫°n ƒë·ªçc (ng∆∞·ªùi m∆∞·ª£n s√°ch)
    BanDoc banDoc = new BanDoc();
    banDoc.setMaSinhVien(txtMaSinhVien.getText());
    phieumuon.setBanDoc(banDoc);
    
    // L·∫•y danh s√°ch s√°ch t·ª´ b·∫£ng tbnSach
    ArrayList<Sach> dsSach = new ArrayList<>();
    DefaultTableModel model = (DefaultTableModel) tbnSach.getModel();
    int rowCount = model.getRowCount();
    
    // Ki·ªÉm tra n·∫øu ch∆∞a ch·ªçn s√°ch ƒë·ªÉ m∆∞·ª£n
    if (rowCount == 0) {
        JOptionPane.showMessageDialog(this, "Thi·∫øu th√¥ng tin phi·∫øu m∆∞·ª£n!");
        return;
    }
    // Ki·ªÉm tra m√£ sinh vi√™n c√≥ r·ªóng kh√¥ng
    if (txtMaSinhVien.getText().trim().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Thi·∫øu th√¥ng tin phi·∫øu m∆∞·ª£n!", "Thi·∫øu th√¥ng tin", JOptionPane.WARNING_MESSAGE);
    return;
     }
      DAOPhieuMuon dao = new DAOPhieuMuon();
    for (int i = 0; i < rowCount; i++) {
        String maSach = model.getValueAt(i, 0).toString(); // C·ªôt 0 l√† m√£ s√°ch
        String thoiHanMuon = model.getValueAt(i, 6).toString(); // C·ªôt 6 l√† th·ªùi h·∫°n m∆∞·ª£n

        // Ki·ªÉm tra tr·∫°ng th√°i s√°ch
        if (dao.isSachChuaMuon(maSach)) {
            Sach sach = new Sach();
            sach.setMaSach(maSach);
            sach.setThoihanmuon(thoiHanMuon);
            dsSach.add(sach);
        } 
        else{
         JOptionPane.showMessageDialog(this, "S√°ch ƒë√£ ƒë∆∞·ª£c m∆∞·ª£n , Vui l√≤ng nh·∫≠p l·∫°i !");
         return;
        }
    }

    // G√°n danh s√°ch s√°ch v√†o phi·∫øu m∆∞·ª£n
    phieumuon.setSach(dsSach);
    boolean isSuccess = dao.ThemPhieuMuon(phieumuon);
    // Hi·ªÉn th·ªã th√¥ng b√°o t√πy theo k·∫øt qu·∫£ th√™m phi·∫øu m∆∞·ª£n
    if (isSuccess) {
        StringBuilder msg = new StringBuilder("Th√™m phi·∫øu m∆∞·ª£n th√†nh c√¥ng v·ªõi c√°c s√°ch sau:\n\n");
    for (Sach s : dsSach) {
        msg.append("M√£ s√°ch: ").append(s.getMaSach()).append("\n");
        msg.append("Th·ªùi h·∫°n m∆∞·ª£n: ").append(s.getThoihanmuon()).append("\n\n");
    }
    JOptionPane.showMessageDialog(this, msg.toString(), "Th√™m phi·∫øu m∆∞·ª£n th√†nh c√¥ng!", JOptionPane.INFORMATION_MESSAGE);
        pdf();
          

  
    } else {
        JOptionPane.showMessageDialog(this, "Th√™m th·∫•t b·∫°i! Vui l√≤ng th·ª≠ l·∫°i.");
    }
    resetForm() ; 
    txtMaPhieuMuon.setText(generateNewMaPhieuMuon());

    }//GEN-LAST:event_btnThemActionPerformed

    private void txtTimKiemMaSachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemMaSachActionPerformed
        // TODO add your handling code here:
        String maSach = txtTimKiemMaSach.getText().trim();

        if (maSach.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p m√£ s√°ch!", "L·ªói", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // C√¢u l·ªánh SQL ƒë·ªÉ t√¨m s√°ch theo m√£
        String sql = "SELECT masach, tensach, tacgia, theloai, nhaxuatban, giatien FROM Sach WHERE masach = ?";

        try (Connection conn = MyConnection.getConnection();
            PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, maSach);

            try (ResultSet rs = ps.executeQuery()) {
                // L·∫•y m√¥ h√¨nh d·ªØ li·ªáu c·ªßa b·∫£ng
                DefaultTableModel model = (DefaultTableModel) tbnSach.getModel();

                // Ki·ªÉm tra n·∫øu c√≥ d·ªØ li·ªáu t·ª´ database
                if (rs.next()) {
                    Object[] row = {
                        rs.getString("masach"),
                        rs.getString("tensach"),
                        rs.getString("tacgia"),
                        rs.getString("theloai"),
                        rs.getString("nhaxuatban"),
                        rs.getString("giatien"),
                        "3 th√°ng"
                    };
                    model.addRow(row); // Th√™m d√≤ng m·ªõi
                } else {
                    
                }
            }
        } catch (SQLException e) {
            
        }

        // X√≥a n·ªôi dung √¥ nh·∫≠p ƒë·ªÉ nh·∫≠p ti·∫øp
        txtTimKiemMaSach.setText("");
        txtTimKiemMaSach.requestFocus(); // ƒê∆∞a con tr·ªè chu·ªôt v√†o √¥ nh·∫≠p ƒë·ªÉ nh·∫≠p nhanh h∆°n
    }//GEN-LAST:event_txtTimKiemMaSachActionPerformed

    private void txtTimKiemMaSinhVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemMaSinhVienActionPerformed
        searchStudentInfo();
    }//GEN-LAST:event_txtTimKiemMaSinhVienActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelSach = (DefaultTableModel) tbnSach.getModel();
        modelSach.setRowCount(0);  // X√≥a h·∫øt t·∫•t c·∫£ c√°c h√†ng trong b·∫£ng
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtMaSinhVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSinhVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSinhVienActionPerformed

    private void txtKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKhoaActionPerformed

    private void txtSDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSDTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSDTActionPerformed

    private void txtLopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLopActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLopActionPerformed

    private void btnXuatPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatPDFActionPerformed
      JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Ch·ªçn n∆°i l∆∞u file CSV");
fileChooser.setSelectedFile(new File("PhieuMuon.csv"));

int userSelection = fileChooser.showSaveDialog(this);
if (userSelection != JFileChooser.APPROVE_OPTION) {
    return;
}

File fileToSave = fileChooser.getSelectedFile();

if (fileToSave.exists()) {
    int option = JOptionPane.showConfirmDialog(this,
        "File ƒë√£ t·ªìn t·∫°i. B·∫°n c√≥ mu·ªën ghi ƒë√®?", "X√°c nh·∫≠n",
        JOptionPane.YES_NO_OPTION);
    if (option == JOptionPane.NO_OPTION) {
        return;
    }
}

Connection conn = null;
try {
    if (conn == null || conn.isClosed()) {
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=Test;encrypt=true;trustServerCertificate=true",
            "sa", "123456789");
    }

    // L·∫•y phi·∫øu m∆∞·ª£n m·ªõi nh·∫•t ch∆∞a tr·∫£ c√πng th√¥ng tin s√°ch
    String sql = 
        "SELECT pm.maphieumuon, sv.masinhvien, sv.tensinhvien, " +
        "       value as masach, s.tensach, pm.thoigianmuonsach, pm.thoigiantrasach " +
        "FROM PhieuMuon pm " +
        "JOIN SinhVien sv ON pm.masinhvien = sv.masinhvien " +
        "CROSS APPLY STRING_SPLIT(pm.masach, ',') " +
        "JOIN Sach s ON s.masach = value " +
        "WHERE pm.datra = 0 " +
        "AND pm.maphieumuon = ( " +
        "    SELECT TOP 1 maphieumuon FROM PhieuMuon WHERE datra = 0 ORDER BY thoigianmuonsach DESC " +
        ") " +
        "ORDER BY pm.maphieumuon";

    try (PreparedStatement ps = conn.prepareStatement(sql);
         ResultSet rs = ps.executeQuery();
         OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(fileToSave), StandardCharsets.UTF_8);
         BufferedWriter writer = new BufferedWriter(osw)) {

        writer.write('\uFEFF'); // BOM UTF-8 cho Excel

        String maPhieuMuon = null;
        String maSinhVien = null;
        String tenSinhVien = null;

        // In d√≤ng ƒë·∫ßu: M√£ phi·∫øu m∆∞·ª£n
        if (rs.next()) {
            maPhieuMuon = rs.getString("maphieumuon");
            maSinhVien = rs.getString("masinhvien");
            tenSinhVien = rs.getString("tensinhvien");

            writer.write("M√£ phi·∫øu m∆∞·ª£n:\t\t" + maPhieuMuon);
            writer.newLine();
            writer.write("M√£ sinh vi√™n:\t\t" + maSinhVien);
            writer.newLine();
            writer.write("T√™n sinh vi√™n:\t\t" + tenSinhVien);
            writer.newLine();

            // In header b·∫£ng s√°ch
            writer.write("M√£ s√°ch\tT√™n s√°ch\tTh·ªùi gian m∆∞·ª£n\tTh·ªùi gian tr·∫£");
            writer.newLine();

            // In d√≤ng ƒë·∫ßu ti√™n c·ªßa s√°ch
            writer.write(rs.getString("masach") + "\t" 
                + rs.getString("tensach") + "\t"
                + rs.getString("thoigianmuonsach") + "\t"
                + rs.getString("thoigiantrasach"));
            writer.newLine();

            // In ti·∫øp c√°c d√≤ng c√≤n l·∫°i
            while (rs.next()) {
                writer.write(rs.getString("masach") + "\t" 
                    + rs.getString("tensach") + "\t"
                    + rs.getString("thoigianmuonsach") + "\t"
                    + rs.getString("thoigiantrasach"));
                writer.newLine();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Kh√¥ng c√≥ phi·∫øu m∆∞·ª£n n√†o ch∆∞a tr·∫£!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        writer.flush();
    }

    JOptionPane.showMessageDialog(this, "Xu·∫•t file th√†nh c√¥ng!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);

    if (Desktop.isDesktopSupported()) {
        Desktop.getDesktop().open(fileToSave);
    }

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "L·ªói khi xu·∫•t file: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
}


    }//GEN-LAST:event_btnXuatPDFActionPerformed

    private void btnXuatPDF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatPDF1ActionPerformed
  JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Ch·ªçn n∆°i l∆∞u file PDF");
fileChooser.setSelectedFile(new File("PhieuMuon.pdf"));

int userSelection = fileChooser.showSaveDialog(null);
if (userSelection != JFileChooser.APPROVE_OPTION) {
    return;
}

File fileToSave = fileChooser.getSelectedFile();

// N·∫øu file ƒë√£ t·ªìn t·∫°i h·ªèi c√≥ ghi ƒë√® kh√¥ng
if (fileToSave.exists()) {
    int option = JOptionPane.showConfirmDialog(null,
            "File ƒë√£ t·ªìn t·∫°i. B·∫°n c√≥ mu·ªën ghi ƒë√®?", "X√°c nh·∫≠n",
            JOptionPane.YES_NO_OPTION);
    if (option == JOptionPane.NO_OPTION) {
        return;
    }
}

Connection conn = null;
try {
    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
    conn = DriverManager.getConnection(
            "jdbc:sqlserver://localhost:1433;databaseName=Test;encrypt=true;trustServerCertificate=true",
            "sa", "123456789");

    String sql = "SELECT pm.maphieumuon, sv.masinhvien, sv.tensinhvien, " +
                 "       value as masach, s.tensach, pm.thoigianmuonsach, pm.thoigiantrasach " +
                 "FROM PhieuMuon pm " +
                 "JOIN SinhVien sv ON pm.masinhvien = sv.masinhvien " +
                 "CROSS APPLY STRING_SPLIT(pm.masach, ',') " +
                 "JOIN Sach s ON s.masach = value " +
                 "WHERE pm.datra = 0 " +
                 "AND pm.maphieumuon = ( " +
                 "    SELECT TOP 1 maphieumuon FROM PhieuMuon WHERE datra = 0 ORDER BY thoigianmuonsach DESC " +
                 ") " +
                 "ORDER BY pm.maphieumuon";

    PreparedStatement ps = conn.prepareStatement(sql);
    ResultSet rs = ps.executeQuery();

    if (!rs.isBeforeFirst()) {  // ki·ªÉm tra n·∫øu result set r·ªóng
        JOptionPane.showMessageDialog(null, "Kh√¥ng c√≥ phi·∫øu m∆∞·ª£n n√†o ch∆∞a tr·∫£!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // T·∫°o document PDF
    Document document = new Document(PageSize.A4);
    PdfWriter.getInstance(document, new FileOutputStream(fileToSave));
    document.open();

    // ƒê∆∞·ªùng d·∫´n t·ªõi font Arial, b·∫°n c·∫ßn s·ª≠a ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng v·ªõi m√°y c·ªßa b·∫°n
    String fontPath = "C:\\Windows\\Fonts\\arial.ttf";  // v√≠ d·ª• Windows
    BaseFont baseFont = BaseFont.createFont(fontPath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
    Font fontBold = new Font(baseFont, 14, Font.BOLD);
    Font fontNormal = new Font(baseFont, 12, Font.NORMAL);

    rs.next(); // di chuy·ªÉn t·ªõi b·∫£n ghi ƒë·∫ßu ti√™n

    String maPhieuMuon = rs.getString("maphieumuon");
    String maSinhVien = rs.getString("masinhvien");
    String tenSinhVien = rs.getString("tensinhvien");

    document.add(new Paragraph("M√£ phi·∫øu m∆∞·ª£n:\t\t" + maPhieuMuon, fontBold));
    document.add(new Paragraph("M√£ sinh vi√™n:\t\t" + maSinhVien, fontBold));
    document.add(new Paragraph("T√™n sinh vi√™n:\t\t" + tenSinhVien, fontBold));
    document.add(new Paragraph(" ")); // d√≤ng tr·ªëng

    PdfPTable table = new PdfPTable(4);
    table.setWidthPercentage(100);
    table.setWidths(new float[]{2f, 5f, 4f, 4f});

    String[] headers = {"M√£ s√°ch", "T√™n s√°ch", "Th·ªùi gian m∆∞·ª£n", "Th·ªùi gian tr·∫£"};
    for (String header : headers) {
        PdfPCell cell = new PdfPCell(new Paragraph(header, fontBold));
        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
        cell.setBackgroundColor(new Color(230, 230, 230));
        table.addCell(cell);
    }

    // D√≤ng ƒë·∫ßu ti√™n ƒë√£ g·ªçi rs.next() r·ªìi n√™n l·∫•y d·ªØ li·ªáu lu√¥n
    do {
        table.addCell(new PdfPCell(new Paragraph(rs.getString("masach"), fontNormal)));
        table.addCell(new PdfPCell(new Paragraph(rs.getString("tensach"), fontNormal)));
        table.addCell(new PdfPCell(new Paragraph(rs.getString("thoigianmuonsach"), fontNormal)));
        table.addCell(new PdfPCell(new Paragraph(rs.getString("thoigiantrasach"), fontNormal)));
    } while (rs.next());

    document.add(table);
    document.add(new Paragraph(" "));
document.add(new Paragraph(" "));
document.add(new Paragraph("N·ªôi quy m∆∞·ª£n v√† s·ª≠ d·ª•ng s√°ch th∆∞ vi·ªán", fontBold));
document.add(new Paragraph("1. L√†m h·ªèng ho·∫∑c b·∫©n s√°ch (r√°ch, ·ªë m√†u, ghi ch√∫, v·∫Ω b·∫≠y...) s·∫Ω ph·∫£i ƒë·ªÅn b√π 25% gi√° tr·ªã cu·ªën s√°ch.", fontNormal));
document.add(new Paragraph("2. N·∫øu s√°ch v·ª´a b·∫©n v·ª´a r√°ch, b·∫°n ƒë·ªçc ph·∫£i b·ªìi th∆∞·ªùng 50% gi√° tr·ªã s√°ch.", fontNormal));
document.add(new Paragraph("3. L√†m m·∫•t s√°ch, b·∫°n ƒë·ªçc s·∫Ω ph·∫£i b·ªìi th∆∞·ªùng 100% gi√° tr·ªã s√°ch.", fontNormal));
document.add(new Paragraph("4. Tr·∫£ s√°ch tr·ªÖ h·∫°n s·∫Ω b·ªã ph·∫°t h√†nh ch√≠nh 50.000 VNƒê/l·∫ßn.", fontNormal));

    document.close();

    JOptionPane.showMessageDialog(null, "Xu·∫•t file PDF th√†nh c√¥ng!", "Th√¥ng b√°o", JOptionPane.INFORMATION_MESSAGE);

    if (Desktop.isDesktopSupported()) {
        Desktop.getDesktop().open(fileToSave);
    }

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "L·ªói khi xu·∫•t file PDF: " + e.getMessage(), "L·ªói", JOptionPane.ERROR_MESSAGE);
} finally {
    try {
        if (conn != null) conn.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

    }//GEN-LAST:event_btnXuatPDF1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXuatPDF;
    private javax.swing.JButton btnXuatPDF1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable tbnSach;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtKhoa;
    private javax.swing.JTextField txtLop;
    private javax.swing.JTextField txtMaPhieuMuon;
    private javax.swing.JTextField txtMaSinhVien;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenSinhVien;
    private javax.swing.JTextField txtTimKiemMaSach;
    private javax.swing.JTextField txtTimKiemMaSinhVien;
    // End of variables declaration//GEN-END:variables
}
